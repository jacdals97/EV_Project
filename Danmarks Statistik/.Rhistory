# Import the population data from Danmarks Statistik
ev_sales <- read_excel("/2021102813564349600816BIL710.xlsx", skip = 3)
library(readxl)
# Import the population data from Danmarks Statistik
ev_sales <- read_excel("/2021102813564349600816BIL710.xlsx", skip = 3)
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Data in the wild")
# Import the population data from Danmarks Statistik
ev_sales <- read_excel("/Data in the wild/Exam/Danmarks Statistik/2021102813564349600816BIL710.xlsx", skip = 3)
library(readxl)
# Import the population data from Danmarks Statistik
ev_sales <- read_excel("/Data in the wild/Exam/Danmarks Statistik/2021102813564349600816BIL710.xlsx", skip = 3)
names(ev_sales)[1] <- "Region/city"
names(ev_sales)[2] <- "year"
names(ev_sales)[3] <- "sales"
for (i in 1:nrow(ev_sales)) {
if (is.na(ev_sales$`Region/city`[i]) == TRUE) {
ev_sales$`Region/city`[i] <- ev_sales$`Region/city`[i-1]
}
}
View(ev_sales)
library(pacman)
p_load(tidyr, readxl, dplyr)
DST_pop_raw <- read_excel("DST_pop.xlsx")
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Data in the wild/Exam/Danmarks Statistik/")
library(readxl)
# Import the population data from Danmarks Statistik
ev_sales <- read_excel("/2021102813564349600816BIL710.xlsx", skip = 3)
names(ev_sales)[1] <- "Region/city"
names(ev_sales)[2] <- "year"
names(ev_sales)[3] <- "sales"
for (i in 1:nrow(ev_sales)) {
if (is.na(ev_sales$`Region/city`[i]) == TRUE) {
ev_sales$`Region/city`[i] <- ev_sales$`Region/city`[i-1]
}
}
library(pacman)
p_load(tidyr, readxl, dplyr)
DST_pop_raw <- read_excel("DST_pop.xlsx")
DST_pop <- DST_pop_raw[1:1898,] # remove Area_size variable and density variable
DST_pop <- DST_pop[3:nrow(DST_pop),]
# Clean population df
names(DST_pop)[2] <- "Area"
names(DST_pop)[3] <- "2017"
names(DST_pop)[4] <- "2018"
names(DST_pop)[5] <- "2019"
names(DST_pop)[6] <- "2020"
names(DST_pop)[7] <- "2021"
long_dst <- DST_pop %>% gather(year, pop, 3:7) # Change to long format
long_dst <- long_dst %>%  separate(Area, c("Area_ID", "Area_name"), sep = " ")
long_dst <- long_dst[,2:5]
long_dst <- long_dst[1:9479,]
View(long_dst)
# Select only population density
DST_pop_density <- DST_pop_raw[3793:nrow(DST_pop_raw),]
# Clean density df
names(DST_pop_density)[2] <- "Area"
names(DST_pop_density)[3] <- "2017"
names(DST_pop_density)[4] <- "2018"
names(DST_pop_density)[5] <- "2019"
names(DST_pop_density)[6] <- "2020"
names(DST_pop_density)[7] <- "2021"
long_pop_density <- DST_pop_density %>% gather(year, pop_density, 3:7)
long_pop_density <- long_pop_density %>% separate(Area, c("Area_ID", "Area_name"), sep = " ")
long_pop_density <- long_pop_density[,2:5]
# Make area_ID numeric
long_dst$Area_ID <- as.numeric(as.factor(long_dst$Area_ID))
long_pop_density$Area_ID <- as.numeric(as.factor(long_pop_density$Area_ID))
# create a common, long format dataframe for both population and population density
long <- right_join(long_dst, long_pop_density, by= c("year", "Area_ID"))
long$pop <- as.numeric(long$pop)
long$pop_density <-  as.numeric(long$pop_density)
# remove all empty rows
long <- long %>% filter(long$pop != 0)
long <- long %>% filter(long$pop_density != 0)
View(long)
View(long_dst)
View(long)
# Make area_ID numeric
long_dst$Area_ID <- as.numeric(as.factor(long_dst$Area_ID))
long_pop_density$Area_ID <- as.numeric(as.factor(long_pop_density$Area_ID))
# create a common, long format dataframe for both population and population density
long <- right_join(long_dst, long_pop_density, by= c("year", "Area_ID"))
long$pop <- as.numeric(long$pop)
long$pop_density <-  as.numeric(long$pop_density)
# remove all empty rows
long <- long %>% filter(long$pop != 0)
long <- long %>% filter(long$pop_density != 0)
write.csv(long, file = "/Exam/population_stats.csv")
# Make area_ID numeric
long_dst$Area_ID <- as.numeric(as.factor(long_dst$Area_ID))
long_pop_density$Area_ID <- as.numeric(as.factor(long_pop_density$Area_ID))
# create a common, long format dataframe for both population and population density
long <- right_join(long_dst, long_pop_density, by= c("year", "Area_ID"))
long$pop <- as.numeric(long$pop)
long$pop_density <-  as.numeric(long$pop_density)
# remove all empty rows
long <- long %>% filter(long$pop != 0)
long <- long %>% filter(long$pop_density != 0)
write.csv(long, file = "/population_stats.csv")
write.csv(long, file = "population_stats.csv")
long
View(long)
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Data in the wild/Exam/Danmarks Statistik/")
library(pacman)
p_load(tidyr, readxl, dplyr)
DST_pop_raw <- read_excel("DST_pop.xlsx")
View(DST_pop_raw)
DST_pop <- DST_pop_raw[1:1898,] # remove Area_size variable and density variable
DST_pop <- DST_pop[3:nrow(DST_pop),]
# Clean population df
names(DST_pop)[2] <- "Area"
names(DST_pop)[3] <- "2017"
names(DST_pop)[4] <- "2018"
names(DST_pop)[5] <- "2019"
names(DST_pop)[6] <- "2020"
names(DST_pop)[7] <- "2021"
long_dst <- DST_pop %>% gather(year, pop, 3:7) # Change to long format
long_dst <- long_dst %>%  separate(Area, c("Area_ID", "Area_name"), sep = " ")
long_dst <- long_dst[,2:5]
long_dst <- long_dst[1:9479,]
# Select only population density
DST_pop_density <- DST_pop_raw[3793:nrow(DST_pop_raw),]
# Clean density df
names(DST_pop_density)[2] <- "Area"
names(DST_pop_density)[3] <- "2017"
names(DST_pop_density)[4] <- "2018"
names(DST_pop_density)[5] <- "2019"
names(DST_pop_density)[6] <- "2020"
names(DST_pop_density)[7] <- "2021"
long_pop_density <- DST_pop_density %>% gather(year, pop_density, 3:7)
long_pop_density <- long_pop_density %>% separate(Area, c("Area_ID", "Area_name"), sep = " ")
long_pop_density <- long_pop_density[,2:5]
# Make area_ID numeric
long_dst$Area_ID <- as.numeric(as.factor(long_dst$Area_ID))
long_pop_density$Area_ID <- as.numeric(as.factor(long_pop_density$Area_ID))
long_pop_density
# create a common, long format dataframe for both population and population density
long <- right_join(long_dst, long_pop_density, by= c("year", "Area_ID"))
View(long)
View(long_dst)
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Data in the wild/Exam/Danmarks Statistik/")
library(pacman)
p_load(tidyr, readxl, dplyr)
DST_pop_raw <- read_excel("DST_pop.xlsx")
View(DST_pop_raw)
DST_pop <- DST_pop_raw[1:1898,] # remove Area_size variable and density variable
DST_pop <- DST_pop[3:nrow(DST_pop),]
View(DST_pop)
# Clean population df
names(DST_pop)[2] <- "Area"
names(DST_pop)[3] <- "2017"
names(DST_pop)[4] <- "2018"
names(DST_pop)[5] <- "2019"
names(DST_pop)[6] <- "2020"
names(DST_pop)[7] <- "2021"
View(DST_pop)
long_dst <- DST_pop %>% gather(year, pop, 3:7) # Change to long format
View(long_dst)
long_dst %>%  separate(Area, c("Area_ID", "Area_name"), sep = " ")
long_dst <- long_dst %>%  separate(Area, c("Area_ID", "Area_name"), sep = " ")
View(long_dst)
long_dst <- long_dst[,2:5]
View(long_dst)
long_dst <- long_dst[1:9479,]
# Select only population density
DST_pop_density <- DST_pop_raw[3793:nrow(DST_pop_raw),]
# Clean density df
names(DST_pop_density)[2] <- "Area"
names(DST_pop_density)[3] <- "2017"
names(DST_pop_density)[4] <- "2018"
names(DST_pop_density)[5] <- "2019"
View(DST_pop_density)
names(DST_pop_density)[6] <- "2020"
names(DST_pop_density)[7] <- "2021"
long_pop_density <- DST_pop_density %>% gather(year, pop_density, 3:7)
long_pop_density <- long_pop_density %>% separate(Area, c("Area_ID", "Area_name"), sep = " ")
long_pop_density <- long_pop_density[,2:5]
View(long_pop_density)
long_pop_density
View(long_pop_density)
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Data in the wild/Exam/Danmarks Statistik/")
library(pacman)
p_load(tidyr, readxl, dplyr)
DST_pop_raw <- read_excel("DST_pop.xlsx")
DST_pop <- DST_pop_raw[1:1898,] # remove Area_size variable and density variable
DST_pop <- DST_pop[3:nrow(DST_pop),]
# Clean population df
names(DST_pop)[2] <- "Area"
names(DST_pop)[3] <- "2017"
names(DST_pop)[4] <- "2018"
names(DST_pop)[5] <- "2019"
names(DST_pop)[6] <- "2020"
names(DST_pop)[7] <- "2021"
long_dst <- DST_pop %>% gather(year, pop, 3:7) # Change to long format
View(long_dst)
long_dst
separate(Area, c("Area_ID", "Area_name"), sep = " ")
long_dst %>%  separate(Area, c("Area_ID", "Area_name"), sep = " ")
separate(Area, c("Area_ID", "Area_name"), sep = " ", extra='merge')
long_dst %>%  separate(Area, c("Area_ID", "Area_name"), sep = " ", extra='merge')
View(long_dst)
long_dst <- long_dst %>%  separate(Area, c("Area_ID", "Area_name"), sep = " ", extra='merge')
View(long_dst)
library(pacman)
p_load(tidyr, readxl, dplyr)
DST_pop_raw <- read_excel("DST_pop.xlsx")
DST_pop <- DST_pop_raw[1:1898,] # remove Area_size variable and density variable
DST_pop <- DST_pop[3:nrow(DST_pop),]
# Clean population df
names(DST_pop)[2] <- "Area"
names(DST_pop)[3] <- "2017"
names(DST_pop)[4] <- "2018"
names(DST_pop)[5] <- "2019"
names(DST_pop)[6] <- "2020"
names(DST_pop)[7] <- "2021"
long_dst <- DST_pop %>% gather(year, pop, 3:7) # Change to long format
long_dst <- long_dst %>%  separate(Area, c("Area_ID", "Area_name"), sep = " ", extra='merge')
long_dst <- long_dst[,2:5]
long_dst <- long_dst[1:9479,]
# Select only population density
DST_pop_density <- DST_pop_raw[3793:nrow(DST_pop_raw),]
# Clean density df
names(DST_pop_density)[2] <- "Area"
names(DST_pop_density)[3] <- "2017"
names(DST_pop_density)[4] <- "2018"
names(DST_pop_density)[5] <- "2019"
names(DST_pop_density)[6] <- "2020"
names(DST_pop_density)[7] <- "2021"
long_pop_density <- DST_pop_density %>% gather(year, pop_density, 3:7)
long_pop_density <- long_pop_density %>% separate(Area, c("Area_ID", "Area_name"), sep = " ", extra='merge')
long_pop_density <- long_pop_density[,2:5]
# Make area_ID numeric
long_dst$Area_ID <- as.numeric(as.factor(long_dst$Area_ID))
long_pop_density$Area_ID <- as.numeric(as.factor(long_pop_density$Area_ID))
# create a common, long format dataframe for both population and population density
long <- right_join(long_dst, long_pop_density, by= c("year", "Area_ID"))
long$pop <- as.numeric(long$pop)
long$pop_density <-  as.numeric(long$pop_density)
long
View(long)
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Data in the wild/Exam/Danmarks Statistik/")
library(pacman)
p_load(tidyr, readxl, dplyr)
DST_pop_raw <- read_excel("DST_pop.xlsx")
DST_pop <- DST_pop_raw[1:1898,] # remove Area_size variable and density variable
DST_pop <- DST_pop[3:nrow(DST_pop),]
# Clean population df
names(DST_pop)[2] <- "Area"
names(DST_pop)[3] <- "2017"
names(DST_pop)[4] <- "2018"
names(DST_pop)[5] <- "2019"
names(DST_pop)[6] <- "2020"
names(DST_pop)[7] <- "2021"
long_dst <- DST_pop %>% gather(year, pop, 3:7) # Change to long format
long_dst <- long_dst %>%  separate(Area, c("Area_ID", "Area_name"), sep = " ", extra='merge')
long_dst <- long_dst[,2:5]
long_dst <- long_dst[1:9479,]
# Select only population density
DST_pop_density <- DST_pop_raw[3793:nrow(DST_pop_raw),]
# Clean density df
names(DST_pop_density)[2] <- "Area"
names(DST_pop_density)[3] <- "2017"
names(DST_pop_density)[4] <- "2018"
names(DST_pop_density)[5] <- "2019"
names(DST_pop_density)[6] <- "2020"
names(DST_pop_density)[7] <- "2021"
long_pop_density <- DST_pop_density %>% gather(year, pop_density, 3:7)
long_pop_density <- long_pop_density %>% separate(Area, c("Area_ID", "Area_name"), sep = " ", extra='merge')
long_pop_density <- long_pop_density[,2:5]
# Make area_ID numeric
long_dst$Area_ID <- as.numeric(as.factor(long_dst$Area_ID))
long_pop_density$Area_ID <- as.numeric(as.factor(long_pop_density$Area_ID))
inner_join(long_dst, long_pop_density, by= c("year", "Area_ID"))
outer_join(long_dst, long_pop_density, by= c("year", "Area_ID"))
Outer_join(long_dst, long_pop_density, by= c("year", "Area_ID"))
left_join(long_dst, long_pop_density, by= c("year", "Area_ID"))
semi_join(long_dst, long_pop_density, by= c("year", "Area_ID"))
inner_join(long_dst, long_pop_density, by= c("year", "Area_ID"))
# create a common, long format dataframe for both population and population density
long <- inner_join(long_dst, long_pop_density, by= c("year", "Area_ID"))
long$pop <- as.numeric(long$pop)
long$pop_density <-  as.numeric(long$pop_density)
long[-long$Area_name.y]
long[-long$Area_name.y]
long <- long[-long$Area_name.y]
View(long)
long[,-5]
long <- long[,-5]
View(long)
View(long_pop_density)
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Data in the wild/Exam/Danmarks Statistik/")
library(pacman)
p_load(tidyr, readxl, dplyr)
DST_pop_raw <- read_excel("DST_pop.xlsx")
DST_pop <- DST_pop_raw[1:1898,] # remove Area_size variable and density variable
DST_pop <- DST_pop[3:nrow(DST_pop),]
# Clean population df
names(DST_pop)[2] <- "Area"
names(DST_pop)[3] <- "2017"
names(DST_pop)[4] <- "2018"
names(DST_pop)[5] <- "2019"
names(DST_pop)[6] <- "2020"
names(DST_pop)[7] <- "2021"
long_dst <- DST_pop %>% gather(year, pop, 3:7) # Change to long format
View(long_dst)
long_dst %>%  separate(Area, c("Area_ID", "Area_name"), sep = " ", extra='merge')
long_dst <- DST_pop %>% gather(year, pop, 3:7) # Change to long format
long_dst <- long_dst %>%  separate(Area, c("Area_ID", "Area_name"), sep = " ", extra='merge')
View(long_dst)
long_dst[,2:5]
long_dst <- long_dst[,2:5]
long_dst <- long_dst[1:9479,]
# Select only population density
DST_pop_density <- DST_pop_raw[3793:nrow(DST_pop_raw),]
# Clean density df
names(DST_pop_density)[2] <- "Area"
names(DST_pop_density)[3] <- "2017"
names(DST_pop_density)[4] <- "2018"
names(DST_pop_density)[5] <- "2019"
names(DST_pop_density)[6] <- "2020"
names(DST_pop_density)[7] <- "2021"
long_pop_density <- DST_pop_density %>% gather(year, pop_density, 3:7)
long_pop_density <- long_pop_density %>% separate(Area, c("Area_ID", "Area_name"), sep = " ", extra='merge')
long_pop_density <- long_pop_density[,2:5]
long_pop_density
long_dst
# Make area_ID numeric
long_dst$Area_ID <- as.numeric(as.factor(long_dst$Area_ID))
long_dst
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Data in the wild/Exam/Danmarks Statistik/")
library(pacman)
p_load(tidyr, readxl, dplyr)
DST_pop_raw <- read_excel("DST_pop.xlsx")
DST_pop <- DST_pop_raw[1:1898,] # remove Area_size variable and density variable
DST_pop <- DST_pop[3:nrow(DST_pop),]
# Clean population df
names(DST_pop)[2] <- "Area"
names(DST_pop)[3] <- "2017"
names(DST_pop)[4] <- "2018"
names(DST_pop)[5] <- "2019"
names(DST_pop)[6] <- "2020"
names(DST_pop)[7] <- "2021"
long_dst <- DST_pop %>% gather(year, pop, 3:7) # Change to long format
long_dst <- long_dst %>%  separate(Area, c("Area_ID", "Area_name"), sep = " ", extra='merge')
long_dst <- long_dst[,2:5]
long_dst <- long_dst[1:9479,]
# Select only population density
DST_pop_density <- DST_pop_raw[3793:nrow(DST_pop_raw),]
# Clean density df
names(DST_pop_density)[2] <- "Area"
names(DST_pop_density)[3] <- "2017"
names(DST_pop_density)[4] <- "2018"
names(DST_pop_density)[5] <- "2019"
names(DST_pop_density)[6] <- "2020"
names(DST_pop_density)[7] <- "2021"
long_pop_density <- DST_pop_density %>% gather(year, pop_density, 3:7)
long_pop_density <- long_pop_density %>% separate(Area, c("Area_ID", "Area_name"), sep = " ", extra='merge')
long_pop_density <- long_pop_density[,2:5]
# create a common, long format dataframe for both population and population density
long <- inner_join(long_dst, long_pop_density, by= c("year", "Area_ID"))
View(long)
long$pop <- as.numeric(long$pop)
long$pop_density <-  as.numeric(long$pop_density)
long <- long[,-5]
View(long)
# Import the population data from Danmarks Statistik
ev_sales <- read_excel("/2021102813564349600816BIL710.xlsx", skip = 3)
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Data in the wild/Exam/Danmarks Statistik/")
# Import the population data from Danmarks Statistik
ev_sales <- read_excel("/2021102813564349600816BIL710.xlsx", skip = 3)
library(readxl)
# Import the population data from Danmarks Statistik
ev_sales <- read_excel("/2021102813564349600816BIL710.xlsx", skip = 3)
# Import the population data from Danmarks Statistik
ev_sales <- read_excel("2021102813564349600816BIL710.xlsx", skip = 3)
View(ev_sales)
library(readxl)
# Import the population data from Danmarks Statistik
ev_sales <- read_excel("2021102813564349600816BIL710.xlsx", skip = 3)
names(ev_sales)[1] <- "Region/city"
names(ev_sales)[2] <- "year"
names(ev_sales)[3] <- "sales"
for (i in 1:nrow(ev_sales)) {
if (is.na(ev_sales$`Region/city`[i]) == TRUE) {
ev_sales$`Region/city`[i] <- ev_sales$`Region/city`[i-1]
}
}
View(ev_sales)
